# Scraping:
# Leis municipais e estaduais a respeito do novo Coronavírus (COVID-19)

#  https://leismunicipais.com.br/coronavirus

# Author: Michel Szklo
# Date:  May-2020

# This script scrapes 'leismunicipais' laws related to the coronavirus crisis 
# and it is organized as follows:

#   0. Set Up
#   1. Scraping and data management of municipal laws
#   2. Scraping and data management of state laws
#   3. Adds IBGE municipality and state codes
#   4. Exports data

##########################################################################




# =================================================================
# 0. Set-up
# =================================================================

rm(list=ls())

# packages
packages<-c('dplyr','httr','rvest','tidyr','textclean')

to_install<-packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install)

lapply(packages,require,character.only=TRUE)

# web site to be scraped
site <- httr::GET("https://leismunicipais.com.br/coronavirus")

# =================================================================
# 1. Scraping Municipios
# =================================================================

# extracting infos from html table
# -----------------------------------------------------------------
tabela_mun <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_municipais"]/tbody/tr/td') %>%
  rvest::html_text() %>%
  trimws()

df_mun <- as.data.frame(matrix (data= tabela_mun, ncol = 2, byrow = T))
df_mun <- df_mun %>% mutate(V2 = gsub("\n                                        ","",V2))

tabela_lei <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_municipais"]/tbody/tr/td/a') %>%
  rvest::html_text() %>%
  trimws()

df_lei <- as.data.frame(matrix (data= tabela_lei, ncol = 1, byrow = T))


tabela_link <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_municipais"]/tbody/tr/td/a') %>%
  rvest::html_attr('href') %>%
  trimws()


df_link <- as.data.frame(matrix (data= tabela_link, ncol = 1, byrow = T))


# consolidating dataframe
# -----------------------------------------------------------------
df_mun <- bind_cols(df_mun,df_lei,df_link)
df_mun <- df_mun[c(1,3,2,4)]
colnames(df_mun) <- c("mun","lei","desc","link")

df_mun <- df_mun %>% 
  mutate(mun = as.character(mun), lei = as.character(lei), desc = as.character(desc), link = as.character(link)) %>% 
  mutate(desc = substr(desc, nchar(lei) + 1, nchar(desc)), UF = substr(mun, nchar(mun) - 1, nchar(mun)), mun = substr(mun, 1, nchar(mun)-3))

# creating variables for "types of law"
# -----------------------------------------------------------------
df_mun <- within(df_mun, lei_ord <- grepl("Lei",df_mun$lei))
df_mun <- within(df_mun, ata <- grepl("Ata",df_mun$lei))
df_mun <- within(df_mun, decreto <- grepl("Decreto",df_mun$lei))
df_mun <- within(df_mun, medida <- grepl("Medida Provisória",df_mun$lei))
df_mun <- within(df_mun, oficio <- grepl("Ofício",df_mun$lei))
df_mun <- within(df_mun, portaria <- grepl("Portaria",df_mun$lei))
df_mun <- within(df_mun, resolucao <- grepl("Resolução",df_mun$lei))


# creating variables to identify month
# -----------------------------------------------------------------
df_mun <- within(df_mun, janeiro <- grepl("janeiro",df_mun$lei))
df_mun <- within(df_mun, fevereiro <- grepl("fevereiro",df_mun$lei))
df_mun <- within(df_mun, marco <- grepl("março",df_mun$lei))
df_mun <- within(df_mun, abril <- grepl("abril",df_mun$lei))
df_mun <- within(df_mun, maio <- grepl("maio",df_mun$lei))
df_mun <- within(df_mun, junho <- grepl("junho",df_mun$lei))
df_mun <- within(df_mun, julho <- grepl("julho",df_mun$lei))
df_mun <- within(df_mun, agosto <- grepl("agosto",df_mun$lei))
df_mun <- within(df_mun, setembro <- grepl("setembro",df_mun$lei))
df_mun <- within(df_mun, outubro <- grepl("outubro",df_mun$lei))
df_mun <- within(df_mun, novembro <- grepl("novembro",df_mun$lei))
df_mun <- within(df_mun, dezembro <- grepl("dezembro",df_mun$lei))


df_mun <- lapply(df_mun, function(x) gsub("FALSE","0",x))
df_mun <- lapply(df_mun, function(x) gsub("TRUE","1",x))

df_mun[6:24] <- lapply(df_mun[6:24], function(x) as.numeric(x))
df_mun <- as.data.frame(df_mun)


# extracting date from law title
# -----------------------------------------------------------------
month <- colnames(df_mun)[13:24]
df_mun <- df_mun %>%
  pivot_longer(cols = all_of(month),
               names_to = "mes",
               values_to = "check") %>% 
  filter(check==1) %>% 
  select(-check) %>%
  mutate(lei = as.character(lei)) %>% 
  mutate(data = substr(lei, nchar(lei) - (nchar(mes) + 13), nchar(lei))) %>%
  mutate(dia = ifelse(substr(data,1,1)==" ",substr(data,2,2),substr(data,1,2)))

month_map <- rbind(
  c('janeiro','1'),
  c('fevereiro','2'),
  c('marco','3'),
  c('abril','4'),
  c('maio','5'),
  c('junho','6'),
  c('julho','7'),
  c('agosto','8'),
  c('setembro','9'),
  c('outubro','10'),
  c('novembro','11'),
  c('dezembro','12')
)

for (i in 1:nrow(month_map)){
  name <- month_map[i,1]
  num <- month_map[i,2]
  df_mun <- df_mun %>% mutate(mes = ifelse(mes==name,num,mes))
}

df_mun <- df_mun %>%
  mutate(data = paste0("2020-",mes,"-",dia)) %>%
  mutate(data = as.Date(data, format = c("%Y-%m-%d"))) %>%
  select(-c("dia","mes"))



# =================================================================
# 2. Scraping Estados
# =================================================================

# extracting infos from html table
# -----------------------------------------------------------------
tabela_estado <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_estaduais"]/tbody/tr/td') %>%
  rvest::html_text() %>%
  trimws()

df_estado <- as.data.frame(matrix (data= tabela_estado, ncol = 2, byrow = T))
df_estado <- df_estado %>% mutate(V2 = gsub("\n                                        ","",V2))

tabela_lei <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_estaduais"]/tbody/tr/td/a') %>%
  rvest::html_text() %>%
  trimws()

df_lei <- as.data.frame(matrix (data= tabela_lei, ncol = 1, byrow = T))


tabela_link <- httr::content(site, encoding = "UTF-8") %>%
  rvest::html_nodes(xpath = '//*[@id="tabela_leis_estaduais"]/tbody/tr/td/a') %>%
  rvest::html_attr('href') %>%
  trimws()

df_link <- as.data.frame(matrix (data= tabela_link, ncol = 1, byrow = T))


# consolidating dataframe
# -----------------------------------------------------------------
df_estado <- bind_cols(df_estado,df_lei,df_link)
df_estado <- df_estado[c(1,3,2,4)]
colnames(df_estado) <- c("estado","lei","desc","link")


df_estado <- df_estado %>% 
  mutate(estado = as.character(estado), lei = as.character(lei), desc = as.character(desc), link = as.character(link)) %>% 
  mutate(desc = substr(desc, nchar(lei) + 1, nchar(desc)))


# creating variables for "types of law"
# -----------------------------------------------------------------
df_estado <- within(df_estado, lei_ord <- grepl("Lei",df_estado$lei))
df_estado <- within(df_estado, ata <- grepl("Ata",df_estado$lei))
df_estado <- within(df_estado, decreto <- grepl("Decreto",df_estado$lei))
df_estado <- within(df_estado, medida <- grepl("Medida Provisória",df_estado$lei))
df_estado <- within(df_estado, oficio <- grepl("Ofício",df_estado$lei))
df_estado <- within(df_estado, portaria <- grepl("Portaria",df_estado$lei))
df_estado <- within(df_estado, resolucao <- grepl("Resolução",df_estado$lei))


# creating variables to identify month
# -----------------------------------------------------------------
df_estado <- within(df_estado, janeiro <- grepl("janeiro",df_estado$lei))
df_estado <- within(df_estado, fevereiro <- grepl("fevereiro",df_estado$lei))
df_estado <- within(df_estado, marco <- grepl("março",df_estado$lei))
df_estado <- within(df_estado, abril <- grepl("abril",df_estado$lei))
df_estado <- within(df_estado, maio <- grepl("maio",df_estado$lei))
df_estado <- within(df_estado, junho <- grepl("junho",df_estado$lei))
df_estado <- within(df_estado, julho <- grepl("julho",df_estado$lei))
df_estado <- within(df_estado, agosto <- grepl("agosto",df_estado$lei))
df_estado <- within(df_estado, setembro <- grepl("setembro",df_estado$lei))
df_estado <- within(df_estado, outubro <- grepl("outubro",df_estado$lei))
df_estado <- within(df_estado, novembro <- grepl("novembro",df_estado$lei))
df_estado <- within(df_estado, dezembro <- grepl("dezembro",df_estado$lei))


df_estado <- lapply(df_estado, function(x) gsub("FALSE","0",x))
df_estado <- lapply(df_estado, function(x) gsub("TRUE","1",x))

df_estado[5:23] <- lapply(df_estado[5:23], function(x) as.numeric(x))
df_estado <- as.data.frame(df_estado)

# extracting date from law title
# -----------------------------------------------------------------
month <- colnames(df_estado)[12:23]
df_estado <- df_estado %>%
  pivot_longer(cols = all_of(month),
               names_to = "mes",
               values_to = "check") %>% 
  filter(check==1) %>% 
  select(-check) %>%
  mutate(lei = as.character(lei)) %>% 
  mutate(data = substr(lei, nchar(lei) - (nchar(mes) + 13), nchar(lei))) %>%
  mutate(dia = ifelse(substr(data,1,1)==" ",substr(data,2,2),substr(data,1,2)))

month_map <- rbind(
  c('janeiro','1'),
  c('fevereiro','2'),
  c('marco','3'),
  c('abril','4'),
  c('maio','5'),
  c('junho','6'),
  c('julho','7'),
  c('agosto','8'),
  c('setembro','9'),
  c('outubro','10'),
  c('novembro','11'),
  c('dezembro','12')
)

for (i in 1:nrow(month_map)){
  name <- month_map[i,1]
  num <- month_map[i,2]
  df_estado <- df_estado %>% mutate(mes = ifelse(mes==name,num,mes))
}

df_estado <- df_estado %>%
  mutate(data = paste0("2020-",mes,"-",dia)) %>%
  mutate(data = as.Date(data, format = c("%Y-%m-%d"))) %>%
  select(-c("dia","mes"))



# =================================================================
# 3. Adding municipalities and state codes to dataframes
# =================================================================

# MUNICIPIOS
# -----------------------------------------------------------------

df_mun <- df_mun %>% 
  mutate(mun_merge = replace_non_ascii(gsub("-","",gsub("'","",gsub(" ","",tolower(mun))))))

id_mun <- read.csv(file ="municipios.csv", encoding = "UTF-8")
colnames(id_mun)[6] <- "mun"

id_mun <- id_mun %>% 
  mutate(mun_merge = replace_non_ascii(gsub("-","",gsub("'","",gsub(" ","",tolower(mun)))))) %>% 
  dplyr::select(c("id_munic_6","id_munic_7","id_estado","mun_merge"))

id_mun$mun_merge[id_mun$mun_merge=="hervaldoeste"] <- "hervaldooeste"
id_mun$mun_merge[id_mun$mun_merge=="conquistadoeste"] <- "conquistadooeste"

df_mun <- left_join(df_mun, id_mun, by = "mun_merge")

df_mun <- df_mun %>% dplyr::select(-mun_merge) %>% rename(codmun = id_munic_6)

# ESTADOS
# -----------------------------------------------------------------

id_estado <- read.csv(file ="estados.csv", encoding = "UTF-8", sep = ";", header = T)
colnames(id_estado)[1] <- "coduf"
colnames(id_estado)[3] <- "estado"


df_estado <- left_join(df_estado, id_estado, by = "estado")




# =================================================================
# 4. Exporting
# =================================================================

write.csv2(df_estado, "leis_estado.csv",row.names = F)
write.csv2(df_mun, "leis_mun.csv", row.names = F)



# =================================================================
# 5. NPI subset
# =================================================================

npi <- read.csv("lista_mun_npi.csv", sep = ";")
colnames(npi) <- c("UF","codmun")
npi <- npi %>% 
  mutate(codmun = as.integer(substr(as.character(codmun),1,6)))


df_mun_npi <- df_mun
df_mun_npi$select <- df_mun$codmun %in% npi$codmun
df_mun_npi <- df_mun_npi %>% 
  filter(select==T) %>% 
  select(-select)


df_estado_npi <- df_estado
df_estado_npi$select <- df_estado$UF %in% npi$UF
df_estado_npi <- df_estado_npi %>% 
  filter(select==T) %>% 
  select(-select)


write.csv2(df_estado_npi, "leis_estado_npi.csv",row.names = F)
write.csv2(df_mun_npi, "leis_mun_npi.csv", row.names = F)







